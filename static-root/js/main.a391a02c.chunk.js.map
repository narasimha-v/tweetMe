{"version":3,"sources":["logo.svg","App.jsx","serviceWorker.js","loookup/components.js","tweets/buttons.jsx","loookup/lookup.js","tweets/detail.jsx","tweets/list.jsx","tweets/create.jsx","tweets/components.jsx","index.js"],"names":["module","exports","App","className","src","logo","alt","Boolean","window","location","hostname","match","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","console","log","response","detail","href","onerror","message","send","ActionButton","props","tweet","action","type","display","didperformAction","likes","style","view","handleBackendActionEvent","onClick","event","tweetId","preventDefault","id","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","handlePerformAction","newActionTweet","pathname","urlTweetId","groups","isDetail","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidset","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updtaeTweetsInit","unshift","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendTweetCreate","error","alert","onSubmit","newVal","current","value","ref","required","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","appEle","getElementById","tweetEle","e","createElement","ReactDOM","render","StrictMode","setNewTweets","canTweet","tempNewTweets","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,gLCc5BC,MAVf,WACC,OACC,yBAAKC,UAAU,OACd,4BAAQA,UAAU,cACjB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,YCIzBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCFC,SAASC,EAAOC,EAAQC,EAAUC,EAAUC,GAClD,IAAIC,EACAD,IACHC,EAAWC,KAAKC,UAAUH,IAE3B,IAAMI,EAAM,IAAIC,eACVC,EAAG,mCAA+BR,GACxCM,EAAIG,aAAe,OACnBH,EAAII,KAAKX,EAAQS,GACjB,IAAMG,EAzBP,SAAmBC,GAClB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE/B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACxC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAOP,EAAO,IAAK,CACxDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIH,OAAON,EAYWU,CAAU,aAC5BjB,EAAIkB,iBAAiB,eAAgB,oBACjCb,IAEHL,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAeb,IAErCL,EAAImB,OAAS,WACO,MAAfnB,EAAIoB,SACPC,QAAQC,IAAItB,EAAIuB,SAASC,QAEV,kDADAxB,EAAIuB,SAASC,SAE3BpC,OAAOC,SAASoC,KAAO,kCAGzB9B,EAASK,EAAIuB,SAAUvB,EAAIoB,SAE5BpB,EAAI0B,QAAU,WACb/B,EAAS,CAAEgC,QAAS,kBAAoB,MAEzC3B,EAAI4B,KAAK/B,G,WC1CH,SAASgC,EAAaC,GAAQ,IAEnCC,EAIGD,EAJHC,MAFkC,EAM/BD,EAHHE,OAAUC,EAHwB,EAGxBA,KAAMC,EAHkB,EAGlBA,QAChBC,EAEGL,EAFHK,iBACApD,EACG+C,EADH/C,UAEKqD,EAAQL,EAAMK,MAAQL,EAAMK,MAAQ,EACpCC,EAAQtD,GAAwB,yBAChCuD,EAAgB,SAATL,EAAA,UAAqBG,EAArB,YAA8BF,GAAYA,EACjDK,EAA2B,SAAChB,EAAUH,GAC3B,MAAXA,GAA6B,MAAXA,IAAmBe,GACzCA,EAAiBZ,EAAUH,IAO7B,OACC,oCACC,4BAAQrC,UAAWsD,EAAOG,QANR,SAACC,GCFf,IAAwBC,EDG7BD,EAAME,iBCHuBD,EDIdX,EAAMa,GCHtBpD,EAAO,OAAQ,kBDGiB+C,ECHY,CAAEK,GAAIF,EAASV,ODGjCC,MAKtBK,IEtBE,SAASO,EAAYf,GAAQ,IAC3BC,EAAUD,EAAVC,MACR,OAAOA,EAAMe,OACZ,yBAAK/D,UAAU,OACd,yBAAKA,UAAU,qCACd,uBAAGA,UAAU,yBAAb,WACA,kBAACgE,EAAD,CAAOC,aAAW,EAACjB,MAAOA,EAAMe,OAAQ/D,UAAW,QAGlD,KAGE,SAASgE,EAAMjB,GAAQ,IACrBC,EAA8CD,EAA9CC,MAAOhD,EAAuC+C,EAAvC/C,UAAWkE,EAA4BnB,EAA5BmB,WAAYD,EAAgBlB,EAAhBkB,YADV,EAEUE,mBAASnB,GAAgB,MAFnC,mBAErBoB,EAFqB,KAERC,EAFQ,KAGtBC,EAAsB,SAACC,EAAgBlC,GAC7B,MAAXA,EACHgC,EAAeE,GACM,MAAXlC,GACN6B,GACHA,EAAWK,IAKR/D,EADOH,OAAOC,SAASkE,SACVhE,MAAL,YAAW,WAAX,cACRiE,EAAajE,EAAQA,EAAMkE,OAAOf,SAAW,EAC7CgB,EAAW,UAAG3B,EAAMa,MAAT,UAAqBY,GAKtC,OACC,yBAAKzE,UAAWA,GACf,6BACC,2BACEgD,EAAMa,GADR,MACeb,EAAM4B,SAErB,kBAACd,EAAD,CAAad,MAAOA,KAGrB,yBAAKhD,UAAU,gBACboE,IAA+B,IAAhBH,GACf,kBAAC,IAAMY,SAAP,KACC,kBAAC/B,EAAD,CACCE,MAAOoB,EACPnB,OAAQ,CAAEC,KAAM,OAAQC,QAAS,SACjCC,iBAAkBkB,IAEnB,kBAACxB,EAAD,CACCE,MAAOoB,EACPnB,OAAQ,CAAEC,KAAM,SAAUC,QAAS,UACnCC,iBAAkBkB,IAEnB,kBAACxB,EAAD,CACCE,MAAOoB,EACPnB,OAAQ,CAAEC,KAAM,UAAWC,QAAS,WACpCC,iBAAkBkB,KAIpBK,EAAW,KACX,4BACC3E,UAAU,iCACVyD,QApCc,SAACC,GACnBA,EAAME,iBACNvD,OAAOC,SAASoC,KAAhB,WAA2BM,EAAMa,MAgC9B,UC7DE,SAASiB,EAAW/B,GAAQ,IAAD,EACGoB,mBAAS,IADZ,mBAC1BY,EAD0B,KACdC,EADc,OAELb,mBAAS,IAFJ,mBAE1Bc,EAF0B,KAElBC,EAFkB,OAGOf,oBAAS,GAHhB,mBAG1BgB,EAH0B,KAGZC,EAHY,KAIjCC,qBAAU,WACT,IAAIC,EAAQ,YAAIvC,EAAMwC,WAAWC,OAAOT,GACpCO,EAAMxD,SAAWmD,EAAOnD,QAC3BoD,EAAUI,KAET,CAACP,EAAYhC,EAAMwC,UAAWN,IACjCI,qBAAU,WACT,IAAqB,IAAjBF,EAAwB,EFTvB,SAAsBM,EAAU7E,GACtC,IAAID,EAAW,WACX8E,IAAU9E,EAAQ,4BAAwB8E,IAC9ChF,EAAO,MAAOE,EAAUC,GEatB8E,CAAa3C,EAAM0C,UANY,SAACjD,EAAUH,GAC1B,MAAXA,IACH2C,EAAcxC,GACd4C,GAAgB,UAKjB,CAACrC,EAAM0C,SAAUN,EAAcC,EAAiBL,IACnD,IAAMY,EAAmB,SAACC,GACzB,IAAMC,EAAgB,YAAOd,GAC7Bc,EAAiBC,QAAQF,GACzBZ,EAAca,GACS,YAAOZ,GACZa,QAAQb,GAC1BC,EAAUW,IAEX,OAAOZ,EAAOc,KAAI,SAACC,EAAMC,GACxB,OACC,kBAACjC,EAAD,CACCE,WAAYyB,EACZ3C,MAAOgD,EACPhG,UAAU,sCACVkG,IAAKD,OCpCF,SAASE,EAAYpD,GAC3B,IAAMqD,EAAcC,IAAMC,YAClBC,EAAaxD,EAAbwD,SACFC,EAA2B,SAAChE,EAAUH,GAC5B,MAAXA,EACHkE,EAAS/D,IAETF,QAAQmE,MAAMjE,GACdkE,MAAM,sBASR,OACC,yBAAK1G,UAAW+C,EAAM/C,WACrB,0BAAM2G,SARa,SAACjD,GACrBA,EAAME,iBACN,IAAMgD,EAASR,EAAYS,QAAQC,MHHpCrG,EAAO,OAAQ,kBGIS+F,EHJoB,CAAE5B,QGI9BgC,IACfR,EAAYS,QAAQC,MAAQ,KAK1B,8BACCC,IAAKX,EACLpG,UAAU,eACVuB,KAAK,QACLyF,UAAU,IACX,4BAAQ9D,KAAK,SAASlD,UAAU,wBAAhC,WCJG,SAASiH,EAAqBlE,GAAQ,IACpCY,EAAYZ,EAAZY,QADmC,EAETQ,oBAAS,GAFA,mBAEpC+C,EAFoC,KAEzBC,EAFyB,OAGjBhD,mBAAS,MAHQ,mBAGpCnB,EAHoC,KAG7BoE,EAH6B,KAIrCC,EAAsB,SAAC7E,EAAUH,GACvB,MAAXA,EACH+E,EAAS5E,GAETkE,MAAM,kBAOR,OAJArB,qBAAU,YJjCJ,SAAwB1B,EAAS/C,GACvCH,EAAO,MAAD,kBAAmBkD,EAAnB,KAA+B/C,GIiCpC0G,CAAe3D,EAAS0D,GACxBF,GAAa,KACX,CAACxD,EAASuD,EAAWC,IACP,OAAVnE,EAAiB,KACvB,kBAACgB,EAAD,CAAOhB,MAAOA,EAAOhD,UAAW+C,EAAM/C,YCjCxC,IAAMuH,EAAS9F,SAAS+F,eAAe,QACjCC,EAAWhG,SAAS+F,eAAe,YACnCE,EAAIrB,IAAMsB,cAEZJ,GACHK,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDP,GAIEE,GACHG,IAASC,OAAOH,GDfV,SAAyB3E,GAAQ,IAAD,EACJoB,mBAAS,IADL,mBAC/BoB,EAD+B,KACpBwC,EADoB,KAEhCC,EAA8B,UAAnBjF,EAAMiF,SAMvB,OACC,yBAAKhI,UAAW+C,EAAM/C,YACP,IAAbgI,GACA,kBAAC7B,EAAD,CAAaI,SARO,SAACX,GACvB,IAAIqC,EAAa,YAAO1C,GACxB0C,EAAcnC,QAAQF,GACtBmC,EAAaE,IAK4BjI,UAAU,gBAElD,kBAAC8E,EAAD,eAAYS,UAAWA,GAAexC,OCEL0E,EAASS,SAAUT,GAG3BhG,SAAS0G,iBAAiB,mBAClCC,SAAQ,SAACC,GAC5BT,IAASC,OAAOH,EAAET,EAAsBoB,EAAUH,SAAUG,MRyGvD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnC,GACLnE,QAAQmE,MAAMA,EAAM7D,c","file":"static/js/main.a391a02c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<img src={logo} className='App-logo' alt='logo' />\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function getCookie(name) {\n\tlet cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tconst cookies = document.cookie.split(';');\n\t\tfor (let i = 0; i < cookies.length; i++) {\n\t\t\tconst cookie = cookies[i].trim();\n\t\t\t// Does this cookie string begin with the name we want?\n\t\t\tif (cookie.substring(0, name.length + 1) === name + '=') {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}\n\nexport function lookup(method, endpoint, callback, data) {\n\tlet jsonData;\n\tif (data) {\n\t\tjsonData = JSON.stringify(data);\n\t}\n\tconst xhr = new XMLHttpRequest();\n\tconst url = `http://localhost:8000/api${endpoint}`;\n\txhr.responseType = 'json';\n\txhr.open(method, url);\n\tconst csrftoken = getCookie('csrftoken');\n\txhr.setRequestHeader('Content-Type', 'application/json');\n\tif (csrftoken) {\n\t\t//xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-CSRFToken', csrftoken);\n\t}\n\txhr.onload = function () {\n\t\tif (xhr.status === 403) {\n\t\t\tconsole.log(xhr.response.detail);\n\t\t\tconst detail = xhr.response.detail;\n\t\t\tif (detail === 'Authentication credentials were not provided.') {\n\t\t\t\twindow.location.href = '/login?showLoginRequired=true';\n\t\t\t}\n\t\t}\n\t\tcallback(xhr.response, xhr.status);\n\t};\n\txhr.onerror = function () {\n\t\tcallback({ message: 'Request Failed' }, 400);\n\t};\n\txhr.send(jsonData);\n}\n","import React from 'react';\nimport { apiTweetAction } from '../loookup';\n\nexport function ActionButton(props) {\n\tconst {\n\t\ttweet,\n\t\taction: { type, display },\n\t\tdidperformAction,\n\t\tclassName\n\t} = props;\n\tconst likes = tweet.likes ? tweet.likes : 0;\n\tconst style = className ? className : 'btn btn-primary btn-sm';\n\tconst view = type === 'like' ? `${likes} ${display}` : display;\n\tconst handleBackendActionEvent = (response, status) => {\n\t\tif ((status === 200 || status === 201) && didperformAction) {\n\t\t\tdidperformAction(response, status);\n\t\t}\n\t};\n\tconst handleClick = (event) => {\n\t\tevent.preventDefault();\n\t\tapiTweetAction(tweet.id, type, handleBackendActionEvent);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<button className={style} onClick={handleClick}>\n\t\t\t\t{view}\n\t\t\t</button>\n\t\t</>\n\t);\n}\n","import { lookup } from './components';\n\nexport function apiTweetDetail(tweetId, callback) {\n\tlookup('GET', `/tweets/${tweetId}/`, callback);\n}\n\nexport function apiTweetList(username, callback) {\n\tlet endpoint = '/tweets/';\n\tif (username) endpoint = `/tweets/?username=${username}`;\n\tlookup('GET', endpoint, callback);\n}\n\nexport function apiTweetCreate(tweetData, callback) {\n\tlookup('POST', '/tweets/create/', callback, { content: tweetData });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n\tlookup('POST', '/tweets/action/', callback, { id: tweetId, action });\n}\n","import React, { useState } from 'react';\nimport { ActionButton } from './buttons';\n\nexport function ParentTweet(props) {\n\tconst { tweet } = props;\n\treturn tweet.parent ? (\n\t\t<div className='row'>\n\t\t\t<div className='col-11 mx-auto p-3 border rounded'>\n\t\t\t\t<p className='mb-0 text-muted small'>Retweet</p>\n\t\t\t\t<Tweet hideActions tweet={tweet.parent} className={' '} />\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n\nexport function Tweet(props) {\n\tconst { tweet, className, didRetweet, hideActions } = props;\n\tconst [actionTweet, setActionTweet] = useState(tweet ? tweet : null);\n\tconst handlePerformAction = (newActionTweet, status) => {\n\t\tif (status === 200) {\n\t\t\tsetActionTweet(newActionTweet);\n\t\t} else if (status === 201) {\n\t\t\tif (didRetweet) {\n\t\t\t\tdidRetweet(newActionTweet);\n\t\t\t}\n\t\t}\n\t};\n\tconst path = window.location.pathname;\n\tconst match = path.match(/(?<tweetId>\\d+)/);\n\tconst urlTweetId = match ? match.groups.tweetId : -1;\n\tconst isDetail = `${tweet.id}` === `${urlTweetId}`;\n\tconst handleLink = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.location.href = `/${tweet.id}`;\n\t};\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t{tweet.id} - {tweet.content}\n\t\t\t\t</p>\n\t\t\t\t<ParentTweet tweet={tweet} />\n\t\t\t</div>\n\n\t\t\t<div className='btn btn-goup'>\n\t\t\t\t{actionTweet && hideActions !== true && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<ActionButton\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\taction={{ type: 'like', display: 'Likes' }}\n\t\t\t\t\t\t\tdidperformAction={handlePerformAction}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ActionButton\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\taction={{ type: 'unlike', display: 'Unlike' }}\n\t\t\t\t\t\t\tdidperformAction={handlePerformAction}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ActionButton\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\taction={{ type: 'retweet', display: 'Retweet' }}\n\t\t\t\t\t\t\tdidperformAction={handlePerformAction}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t{isDetail ? null : (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn btn-outline-primary btn-sm'\n\t\t\t\t\t\tonClick={handleLink}>\n\t\t\t\t\t\tView\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { apiTweetList } from '../loookup';\nimport { Tweet } from './detail';\n\nexport function TweetsList(props) {\n\tconst [tweetsInit, setTweetsInit] = useState([]);\n\tconst [tweets, setTweets] = useState([]);\n\tconst [tweetsDidSet, setTweetsDidset] = useState(false);\n\tuseEffect(() => {\n\t\tlet final = [...props.newTweets].concat(tweetsInit);\n\t\tif (final.length !== tweets.length) {\n\t\t\tsetTweets(final);\n\t\t}\n\t}, [tweetsInit, props.newTweets, tweets]);\n\tuseEffect(() => {\n\t\tif (tweetsDidSet === false) {\n\t\t\tconst handleBackendTweetLoad = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tsetTweetsInit(response);\n\t\t\t\t\tsetTweetsDidset(true);\n\t\t\t\t}\n\t\t\t};\n\t\t\tapiTweetList(props.username, handleBackendTweetLoad);\n\t\t}\n\t}, [props.username, tweetsDidSet, setTweetsDidset, tweetsInit]);\n\tconst handleDidRetweet = (newTweet) => {\n\t\tconst updtaeTweetsInit = [...tweetsInit];\n\t\tupdtaeTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updtaeTweetsInit);\n\t\tconst updateFinalTweets = [...tweets];\n\t\tupdateFinalTweets.unshift(tweets);\n\t\tsetTweets(updtaeTweetsInit);\n\t};\n\treturn tweets.map((item, index) => {\n\t\treturn (\n\t\t\t<Tweet\n\t\t\t\tdidRetweet={handleDidRetweet}\n\t\t\t\ttweet={item}\n\t\t\t\tclassName='my-5 px-5 border bg-white text-dark'\n\t\t\t\tkey={index}\n\t\t\t/>\n\t\t);\n\t});\n}\n","import React from 'react';\nimport { apiTweetCreate } from '../loookup';\n\nexport function TweetCreate(props) {\n\tconst textAreaRef = React.createRef();\n\tconst { didTweet } = props;\n\tconst handleBackendTweetCreate = (response, status) => {\n\t\tif (status === 201) {\n\t\t\tdidTweet(response);\n\t\t} else {\n\t\t\tconsole.error(response);\n\t\t\talert('Please try again');\n\t\t}\n\t};\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newVal = textAreaRef.current.value;\n\t\tapiTweetCreate(newVal, handleBackendTweetCreate);\n\t\ttextAreaRef.current.value = '';\n\t};\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<textarea\n\t\t\t\t\tref={textAreaRef}\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='tweet'\n\t\t\t\t\trequired={true}></textarea>\n\t\t\t\t<button type='submit' className='btn btn-primary my-3'>\n\t\t\t\t\tTweet\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { TweetsList } from './list';\nimport { TweetCreate } from './create';\nimport { apiTweetDetail } from '../loookup';\nimport { Tweet } from './detail';\n\nexport function TweetsComponent(props) {\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst canTweet = props.canTweet === 'false' ? false : true;\n\tconst handleNewTweet = (newTweet) => {\n\t\tlet tempNewTweets = [...newTweets];\n\t\ttempNewTweets.unshift(newTweet);\n\t\tsetNewTweets(tempNewTweets);\n\t};\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t{canTweet === true && (\n\t\t\t\t<TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />\n\t\t\t)}\n\t\t\t<TweetsList newTweets={newTweets} {...props} />\n\t\t</div>\n\t);\n}\n\nexport function TweetDetailComponent(props) {\n\tconst { tweetId } = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [tweet, setTweet] = useState(null);\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetTweet(response);\n\t\t} else {\n\t\t\talert('Unknown error');\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tapiTweetDetail(tweetId, handleBackendLookup);\n\t\tsetDidLookup(true);\n\t}, [tweetId, didLookup, setDidLookup]);\n\treturn tweet === null ? null : (\n\t\t<Tweet tweet={tweet} className={props.className} />\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { TweetsComponent, TweetDetailComponent } from '../src/tweets';\n\nconst appEle = document.getElementById('root');\nconst tweetEle = document.getElementById('tweetEle');\nconst e = React.createElement;\n\nif (appEle) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappEle\n\t);\n}\n\nif (tweetEle) {\n\tReactDOM.render(e(TweetsComponent, tweetEle.dataset), tweetEle);\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-detail');\ntweetDetailElements.forEach((container) => {\n\tReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}